#!/bin/sh
PATH=/bin:/sbin:/usr/bin:/usr/sbin
export PATH
export DEBIAN_FRONTEND="noninteractive"
dpkg -i /mnt/machine-emulator-tools-v0.12.0.deb
date -s '2023-09-28 00:00:00'
/opt/cartesi/bin/rndaddentropy < /opt/cartesi/bin/rndaddentropy
cat > /opt/cartesi/bin/preinit << EOF
#!/bin/sh
/opt/cartesi/bin/rndaddentropy < /opt/cartesi/var/run/random-seed
exec /sbin/init
EOF
mkdir -p /opt/cartesi/dapp
chmod +x /opt/cartesi/bin/preinit
cat > /opt/cartesi/bin/run-docker.sh << EOF
#!/bin/bash
export IPFS_PATH=/opt/ipfs
export HTTP_DATASTORE_URL=http://127.0.0.1:5004/ipfs
export CACHE_DIR=/opt/rollup-cache/
export STORE_DIR=/opt/rollup-store/
export IO_DEVICE=/dev/mtdblock1
mkdir -p /opt/rollup-store
mkdir -p /opt/rollup-cache
#curl -X POST -d '{"status":"accept"}' -H "Content-Type: application/json" http://127.0.0.1:5004/finish
/usr/bin/ipfs init /etc/ipfs-config
/usr/bin/ipfs daemon --offline &
echo "Waiting for IPFS"
IPFS_HOST="127.0.0.1"
IPFS_PORT="5001"

while true; do
	nc -z "\$IPFS_HOST" "\$IPFS_PORT"
        RET=\$?
        echo \$RET
        if [ x\$RET = x0 ]; then
           break
        fi
        sleep 1
done
echo "IPFS up"

docker run --network host dapp:1.0

EOF
chmod +x /opt/cartesi/bin/run-docker.sh
cat > /opt/cartesi/bin/yield-and-install << EOF
#!/bin/bash
{ 
	if [ ! -e /dev/yield ]; then
		echo "No /dev/yield, exiting"
		exit 0
	fi
	mkdir -p /opt/rollup-cache
	mkdir -p /opt/rollup-store
	export CACHE_DIR=/opt/rollup-cache/
	export STORE_DIR=/opt/rollup-store/
	export IO_DEVICE=/dev/mtdblock1
	CACHE_DIR=/opt/rollup-cache /opt/cartesi/bin/rollup-init /opt/cartesi/bin/run-docker.sh
	
	mount -v /dev/mtdblock1 /opt/cartesi/dapp 2>&1
	echo "entrypoint exited with \$? status"
	dmesg
	halt -f
	exit 0
} 2>&1 > /dev/hvc0
EOF

chmod +x /opt/cartesi/bin/yield-and-install

cat > /etc/systemd/system/yield-and-install.service << EOF
[Unit]
Description=First yield
After=docker.service
Requires=docker.service

[Service]
Type=oneshot
ExecStart=/opt/cartesi/bin/yield-and-install
RemainAfterExit=yes
StandardInput=console
StandardOutput=journal+console
StandardError=journal+console
[Install]
WantedBy=multi-user.target
EOF
systemctl enable yield-and-install.service
cp /mnt/ipfs /usr/bin/ipfs
chmod a+x /usr/bin/ipfs
cp /mnt/ipfs-config /etc/ipfs-config

echo -n "root:cartesi" | chpasswd
printf "deb [check-valid-until=no] file:/mnt/mirror/snapshot.ubuntu.com/ubuntu/20230928T000000Z jammy main restricted universe multiverse\ndeb [check-valid-until=no] file:/mnt/mirror/snapshot.ubuntu.com/ubuntu/20230928T000000Z jammy-updates main restricted universe multiverse" > /etc/apt/sources.list
apt-get update
apt-get install -y jq docker.io curl busybox python3-requests
